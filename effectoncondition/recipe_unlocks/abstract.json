[
  {
    "type": "effect_on_condition",
    "id": "EOC_ANALYZER_UNLOCK_RECIPES",
    "effect": [
      {
        "u_run_inv_eocs": "manual",
        "true_eocs": [
          "EOC_ANALYZER_TRIASSIC",
          "EOC_ANALYZER_JURASSIC",
          "EOC_ANALYZER_CRETACEOUS",
          "EOC_ANALYZER_COELOPHYSIS_FOSSIL",
          "EOC_ANALYZER_COELOPHYSIS_SAMPLE",
          "EOC_ANALYZER_VELOCIRAPTOR_FOSSIL",
          "EOC_ANALYZER_VELOCIRAPTOR_SAMPLE",
          "EOC_ANALYZER_DILOPHOSAURUS_FOSSIL",
          "EOC_ANALYZER_DILOPHOSAURUS_SAMPLE",
          "EOC_ANALYZER_TYRANNOSAURUS_FOSSIL",
          "EOC_ANALYZER_TYRANNOSAURUS_SAMPLE",
          "EOC_ANALYZER_TRICERATOPS_FOSSIL",
          "EOC_ANALYZER_TRICERATOPS_SAMPLE",
          "EOC_ANALYZER_STEGOSAURUS_FOSSIL",
          "EOC_ANALYZER_STEGOSAURUS_SAMPLE",
          "EOC_ANALYZER_BRACHIOSAURUS_FOSSIL",
          "EOC_ANALYZER_BRACHIOSAURUS_SAMPLE",
          "EOC_ANALYZER_PTERANODON_FOSSIL",
          "EOC_ANALYZER_PTERANODON_SAMPLE",
          "EOC_ANALYZER_XIPHACTINUS_FOSSIL",
          "EOC_ANALYZER_XIPHACTINUS_SAMPLE",
          "EOC_ANALYZER_CORN",
          "EOC_ANALYZER_CORN_2",
          "EOC_ANALYZER_JAPANESE_KNOTWEED",
          "EOC_ANALYZER_JAPANESE_KNOTWEED_2",
          "EOC_ANALYZER_BLACK_EYED_SUSAN",
          "EOC_ANALYZER_CHAMOMILE",
          "EOC_ANALYZER_CHAMOMILE_2",
          "EOC_ANALYZER_SASSAFRAS",
          "EOC_ANALYZER_SASSAFRAS_2",
          "EOC_ANALYZER_BEECH",
          "EOC_ANALYZER_BEECH_2",
          "EOC_ANALYZER_THALE_CRESS",
          "EOC_ANALYZER_SELAGINELLA",
          "EOC_ANALYZER_CHICKEN",
          "EOC_ANALYZER_PIGEON",
          "EOC_ANALYZER_GOOSE_CANADIAN",
          "EOC_ANALYZER_OSTRICH",
          "EOC_ANALYZER_MOUSE",
          "EOC_ANALYZER_LAB_RAT",
          "EOC_ANALYZER_GUINEA_PIG",
          "EOC_ANALYZER_PIG",
          "EOC_ANALYZER_COW",
          "EOC_ANALYZER_AXOLOTL",
          "EOC_ANALYZER_FROG_AFRICAN_CLAWED",
          "EOC_ANALYZER_SALMON",
          "EOC_ANALYZER_BLUEFIN_TUNA",
          "EOC_ANALYZER_URCHIN_ATLANTIC_PURPLE"
        ]
      }
    ]
  },
  {
    "type": "effect_on_condition",
    "id": "EOC_ANALYZER_ABSTRACT",
    "//1": "first store the name of beta talker (item that u_run_inv_eocs found) into `found_item_name`",
    "//2": "then store name of the item we want to check in `item_to_analyze`. We will compare them in the next EoC",
    "//3": "all because there is no way to return the id of beta talker on demand",
    "effect": [
      { "set_string_var": "<npc_name>", "target_var": { "context_val": "found_item_name" }, "parse_tags": true },
      {
        "set_string_var": "<item_name:<context_val:item_to_analyze>>",
        "target_var": { "context_val": "required_item_name" },
        "parse_tags": true
      },
      {
        "if": { "compare_string": [ { "context_val": "found_item_name" }, { "context_val": "required_item_name" } ] },
        "then": [ { "run_eocs": [ "EOC_GIVE_THE_RECIPES" ] } ]
      }
    ]
  },
  {
    "type": "effect_on_condition",
    "id": "EOC_GIVE_THE_RECIPES",
    "//1": "u_learn_recipe won't do anything if avatar already knows the recipe, no reason to use u_know_recipe",
    "//2": "but u_learn_recipe with empty string (and undefined variables are assumed to be empty strings) will cause an error, so check variable is valid first, then give the recipe",
    "effect": [
      {
        "if": { "compare_string": [ "", { "context_val": "recipe_to_give_1" } ] },
        "else": [
          { "u_learn_recipe": { "context_val": "recipe_to_give_1" } },
          { "u_message": "Learned <context_val:recipe_to_give_1>" }
        ]
      },
      {
        "if": { "compare_string": [ "", { "context_val": "recipe_to_give_2" } ] },
        "else": [
          { "u_learn_recipe": { "context_val": "recipe_to_give_2" } },
          { "u_message": "Learned <context_val:recipe_to_give_2>" }
        ]
      }
    ]
  }
]
